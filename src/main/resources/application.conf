akka {
  actor {
    provider = "local"
    
    serialization-bindings {
      "com.akkalearning.CborSerializable" = jackson-cbor
    }
  }

  # Loggers to register at boot time (akka.event.Logging$DefaultLogger logs to STDOUT)
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "INFO"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  persistence {
    journal {
      plugin = "jdbc-journal"
      auto-start-journals = ["jdbc-journal"]
    }
    
    snapshot-store {
      plugin = "jdbc-snapshot-store"
      auto-start-snapshot-stores = ["jdbc-snapshot-store"]
    }
  }
}

# JDBC Configuration
jdbc-journal {
  slick = ${slick}
  
  tables {
    journal {
      tableName = "journal"
      schemaName = "public"
    }
  }
}

jdbc-snapshot-store {
  slick = ${slick}
  
  tables {
    snapshot {
      tableName = "snapshot"
      schemaName = "public"
      columnNames {
        persistenceId = "persistence_id"
        sequenceNumber = "sequence_number"
        created = "created"
        snapshot = "snapshot"
        serializerId = "ser_id"
        serializerManifest = "ser_manifest"
      }
    }
  }
}

jdbc-read-journal {
  slick = ${slick}
}

slick {
  profile = "slick.jdbc.PostgresProfile$"
  db {
    host = "localhost"
    host = ${?DB_HOST}
    port = "5432"
    port = ${?DB_PORT}
    name = "akka_learning"
    name = ${?DB_NAME}
    
    url = "jdbc:postgresql://"${slick.db.host}":"${slick.db.port}"/"${slick.db.name}"?reWriteBatchedInserts=true"
    user = "akka"
    user = ${?DB_USER}
    password = "akka123"
    password = ${?DB_PASSWORD}
    driver = "org.postgresql.Driver"
    
    numThreads = 5
    maxConnections = 5
    minConnections = 1
  }
}
